var pageSize = 10;
var pageCount = 0, pageCurrentIndex = 1, pageIndexCount = 1;
var pageData = new Array();

function getContextPath(){
    return document.location.pathname.substring(0,document.location.pathname.indexOf("/",1));
}

function getParameter(name) {
    return decodeURIComponent((new RegExp('[?|&]' + name + '=' + '([^&;]+?)(&|#|;|$)').exec(location.search)||[,""])[1].replace(/\+/g, '%20'))||null;
}
function sendAjaxRequest(url,args){
    let xmlHttpRequest;
    if (window.XMLHttpRequest) {
        xmlHttpRequest = new XMLHttpRequest();
    } else {
        xmlHttpRequest = new ActiveXObject("Microsoft.XMLHTTP");
    }
    //发送Post请求
    xmlHttpRequest.open('POST',url);
    xmlHttpRequest.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
    xmlHttpRequest.send(args);
    return xmlHttpRequest;
}


function createBrElement(){
    const br = document.createElement("br");
    br.innerHTML = "</br>";
    return br;
}
function createSpanElement(html,data){
    const span = document.createElement("span", );
    span.innerHTML = html;
    span.style.width = 'auto';
    span.style.height = '15px';
    span.style.padding = "8px";
    span.style.backgroundColor = "#d4e3e5";
    span.style.display = "inline-block";
    span.style.border = "1px #a9c6c9 solid";
    span.style.marginLeft = "4px";
    span.style.marginTop = "2px";
    span.style.whiteSpace = "normal";
    span.style.wordBreak = "break-all";
    span.onmouseover = spanMouseover;
    span.onmouseout = spanMouseout;
    span.onclick = spanClick;
    span.setAttribute("data-value", data);
    return span;
}

function spanMouseover() {
    let c = this.style.backgroundColor;
    if (c == 'red') {
        return;
    }
    this.style.backgroundColor = '#ffff66';
}

function spanMouseout() {
    let c = this.style.backgroundColor;
    if (c == 'red') {
        return;
    }
    this.style.backgroundColor = '#d4e3e5';
}
function spanClick() {
    let c = this.style.backgroundColor;
    if (c == 'red') {
        this.style.backgroundColor = '#d4e3e5';
    } else {
        this.style.backgroundColor = 'red';
    }
    let lst = document.getElementsByTagName("span", );
    let checkedValue = '';
    for (let i = 0; i < lst.length; i++) {
        if (lst[i].style.backgroundColor=='red' && lst[i].getAttribute("data-value")!='') {
            checkedValue += lst[i].getAttribute("data-value") + ',';
        }
    }
    initFjData(checkedValue);
}

function initFjData(obj) {
    let requestUrl = getContextPath()+"#NAMESPACE#/action";
    //请求参数
    let parameters = 'requestMethod=query&data=' + obj;
    let xmlHttpRequest = sendAjaxRequest(requestUrl, parameters);
    xmlHttpRequest.onreadystatechange = () => {
        if (xmlHttpRequest.readyState === 4) {
            if (xmlHttpRequest.status >= 200 && xmlHttpRequest.status < 300) {
                let string = xmlHttpRequest.responseText;
                const data = JSON.parse(string);
                let count = data.length;
                let divHtml = "";
                document.getElementById("dinfo").innerHTML="<h4>查询到方剂："+count+"方</h4>";
                for (let i = 0; i < count; i++) {
                    divHtml += "<h4>"+(i+1)+".【" + data[i].mc + "】</h4>";
                    divHtml += "<p>&nbsp;&nbsp;" + data[i].fj + "</p>";
                    divHtml += "<h4>【制作方法】</h4>";
                    divHtml += "<p>&nbsp;&nbsp;" + data[i].zzff + "</p><br>";
                }
                document.getElementById("dfjmc").innerHTML = divHtml;
            } else if (xmlHttpRequest.status >= 400) {
                alert('the request has failed. please try again later. error info:[' + xmlHttpRequest.responseText + ']');
            }
        }
    }
}


function jabQuery(){
        //删除所有查询结果数据
        let tdateRow = document.getElementsByName("tdata");
        let rowCount = tdateRow.length;
        while (rowCount>0) {
            let tr = tdateRow[0];
            if(tr){
                tr.remove();
            }
            rowCount = tdateRow.length;
        }
      //重新创建一个锚点，用于加载查询数据集
      let ctr =  document.createElement("tr");
      ctr.setAttribute("id","tdata");
      ctr.setAttribute("name","tdata");
      document.getElementById("sortTbl").tBodies[0].appendChild(ctr);
    //获取form对象
    let form = document.getElementById('mainform');
    //动态action请求url地址
    let requestUrl =  getContextPath()+"#NAMESPACE#/action";
    //请求参数
    let parameters = '#REQUSTPARAMETERS#';
    let xmlHttpRequest = sendAjaxRequest(requestUrl,parameters);
    xmlHttpRequest.onreadystatechange = ()=>{
      if(xmlHttpRequest.readyState === 4){
        if(xmlHttpRequest.status >= 200 && xmlHttpRequest.status < 300){
          let string = xmlHttpRequest.responseText;
          const data = JSON.parse(string);
          let count = data.length;
          let trHtml="";
           //初始化分页数据
          clearPage();
          pageCount = count;
          if (pageCount > pageSize) {
              pageIndexCount = Math.ceil(pageCount / pageSize);
              //生成分页按钮
              let  divPageInfo= document.createElement("div");
              divPageInfo.id="divPageInfo";
              divPageInfo.style.display="inline-block";
              divPageInfo.style.fontSize="10pt";
              divPageInfo.innerHTML="共"+pageCount+"条记录，共"+pageIndexCount+"页，当前"+pageCurrentIndex+"页 &nbsp;&nbsp;";

              let btnPageNext = document.createElement("button");
              btnPageNext.innerHTML="下一页";
              btnPageNext.onclick=nextPage;
              btnPageNext.style.marginLeft = "4px";
              btnPageNext.style.marginTop = "2px";
              btnPageNext.style.marginRight = "20px";

              let btnPagePrevious = document.createElement("button");
              btnPagePrevious.innerHTML="上一页";
              btnPagePrevious.onclick=previousPage;
              btnPagePrevious.style.marginLeft = "4px";
              btnPagePrevious.style.marginTop = "2px";
              btnPagePrevious.style.marginRight = "5px";

              document.getElementById("divPagenation").appendChild(divPageInfo);
              document.getElementById("divPagenation").appendChild(btnPagePrevious);
              document.getElementById("divPagenation").appendChild(btnPageNext);
          }
          for (let i = 0; i < count; i++) {
            trHtml +="<tr  class=\"editGrid\" nowrap=\"nowrap\"   name=\"tdata\" id=\"tdata\">";
            #GRIDDATA#

             trHtml += "</tr>";
             if(pageCount > pageSize){
                     //记录总数大于分页数，需要分页
                    if(i!=0 && i%pageSize==0){
                        pageData.push(trHtml);
                        trHtml="";
                    }
                    //判断当前循环的数据，不足一页时如何处理
                   if(pageCount-(i)<pageSize){
                       if(i>=pageCount-1){
                           pageData.push(trHtml);
                           trHtml="";
                       }
                   }
                }else{
                    //如果不到一页的量，放到第一页
                    if(i>=pageCount-1){
                        pageData.push(trHtml);
                        trHtml="";
                    }
                }
            }
            let trTdata=document.getElementById("tdata");
            trTdata.outerHTML = pageData[pageCurrentIndex-1];
            let t  = document.getElementsByName("tdata")[10];
            if(t != 'undefined'){
                t.parentNode.removeChild(t);
            }

        } else if(xmlHttpRequest.status >= 400){
          alert('the request has failed. please try again later. error info:['+xmlHttpRequest.responseText+']');
        }
      }
    }

}

function clearPage(){
    pageSize = 10;
    pageCount = 0, pageCurrentIndex = 1, pageIndexCount = 1;
    pageData.length=0;
    document.getElementById("divPagenation").innerHTML="";
}
function previousPage(){
    if(pageCurrentIndex <= pageIndexCount && pageCurrentIndex>1){
        pageCurrentIndex--;
        reBuildTrData();
        document.getElementById("divPageInfo").innerHTML="共"+pageCount+"条记录，共"+pageIndexCount+"页，当前"+pageCurrentIndex+"页 &nbsp;&nbsp;";
    }
}
function nextPage(){
    if(pageCurrentIndex<pageIndexCount ){
        pageCurrentIndex++;
        reBuildTrData();
        document.getElementById("divPageInfo").innerHTML="共"+pageCount+"条记录，共"+pageIndexCount+"页，当前"+pageCurrentIndex+"页 &nbsp;&nbsp;";
    }
}
function reBuildTrData(){
    let tdates = document.getElementsByName("tdata");
    let table = document.getElementById("sortTbl");
    for (let index = tdates.length-1; index >=0; index--) {
        tdates[index].parentNode.removeChild(tdates[index]);
    }
    let tr = table.insertRow();
    tr.id="tdata";
    tr.outerHTML = pageData[pageCurrentIndex-1];
}

function jabEdit(args){
    let url =  getContextPath()+"#NAMESPACE#/update.html?"+args;
    window.open(url,"_blank");
}
function jabNew(){
    let url =  getContextPath()+"#NAMESPACE#/new.html";
    window.open(url,"_blank");
}
function jabDel(args){
        if(!window.confirm("删除数据后将不可恢复, 确认要删除吗?")){
            return;
        }
        //动态action请求url地址
        let requestUrl =  getContextPath()+"#NAMESPACE#/action";
        let parameters = '#DELETEPARAMETERS#&'+args;
        let xmlHttpRequest = sendAjaxRequest(requestUrl,parameters);
        xmlHttpRequest.onreadystatechange = ()=>{
          if(xmlHttpRequest.readyState === 4){
            if(xmlHttpRequest.status >= 200 && xmlHttpRequest.status < 300){
              let string = xmlHttpRequest.responseText;
              const data = JSON.parse(string);
              //刷新数据
              jabQuery();
            } else if(xmlHttpRequest.status >= 400){
              alert('the request has failed. please try again later. error info:['+xmlHttpRequest.responseText+']');
            }
          }
       }
}
function jadNew(){
       let requestUrl =  getContextPath()+"#NAMESPACE#/action";
        //获取form对象
        let form = document.getElementById('newform');
        form.action=requestUrl;
        form.submit();
}

function jadUpdate(){
    let requestUrl =  getContextPath()+"#NAMESPACE#/action";
    //获取form对象
    let form = document.getElementById('updateform');
    form.action=requestUrl;
    form.submit();
}
function initUpdate(){
  init();
}

function initNew(){
  //let nextBh = getNextBh();

}
function init() {
    #INITDM#
    #INITDATA#
}

function initSelectDOM(obj,dm){
    let requestUrl =  getContextPath()+"#NAMESPACE#/action";
    //请求参数
    let parameters = 'requestMethod=initDm&dm='+dm;
    let xmlHttpRequest = sendAjaxRequest(requestUrl,parameters);
    xmlHttpRequest.onreadystatechange = ()=>{
        if(xmlHttpRequest.readyState === 4){
            if(xmlHttpRequest.status >= 200 && xmlHttpRequest.status < 300){
                let string = xmlHttpRequest.responseText;
                const data = JSON.parse(string);
                let count = data.length;
                let optionHtml="";
                for (let i = 0; i < count; i++) {
                    if(data[i].DM != getParameter(obj.id)){
                        continue;
                    }
                    var opt = new Option(data[i].MC,data[i].DM);
                    obj.options.add(opt);
                }
            } else if(xmlHttpRequest.status >= 400){
                alert('the request has failed. please try again later. error info:['+xmlHttpRequest.responseText+']');
            }
        }
    }
}

function initCheckBoxDOM(obj,dm){
    let checkboxname = obj.name;
    obj = obj.parentNode;
    obj.innerHTML="";
    let requestUrl =  getContextPath()+"#NAMESPACE#/action";
    //请求参数
    let parameters = 'requestMethod=initDm&dm='+dm;
    let xmlHttpRequest = sendAjaxRequest(requestUrl,parameters);
    xmlHttpRequest.onreadystatechange = ()=>{
        if(xmlHttpRequest.readyState === 4){
            if(xmlHttpRequest.status >= 200 && xmlHttpRequest.status < 300){
                let string = xmlHttpRequest.responseText;
                const data = JSON.parse(string);
                let count = data.length;
                let optionHtml="";
                for (let i = 0; i < count; i++) {
                    const label = document.createElement("label");
                    const checkbox = document.createElement("input");
                    checkbox.type="checkbox";
                    checkbox.id=checkboxname;
                    checkbox.name=checkboxname;
                    checkbox.value=data[i].DM;
                    if(data[i].DM==getParameter(checkboxname)){
                        checkbox.checked=true;
                    }
                    const textContent = document.createTextNode(data[i].MC);
                    label.appendChild(checkbox);
                    label.appendChild(textContent);
                    obj.appendChild(label);
                }
            } else if(xmlHttpRequest.status >= 400){
                alert('the request has failed. please try again later. error info:['+xmlHttpRequest.responseText+']');
            }
        }
    }
}

function initZZData(obj, dm) {
    obj = obj.parentNode;
    obj.innerHTML = "";
     let requestUrl =  getContextPath()+"#NAMESPACE#/action";
    //请求参数
    let parameters = 'requestMethod=initDm&dm=' + dm;
    let xmlHttpRequest = sendAjaxRequest(requestUrl, parameters);
    xmlHttpRequest.onreadystatechange = () => {
        if (xmlHttpRequest.readyState === 4) {
            if (xmlHttpRequest.status >= 200 && xmlHttpRequest.status < 300) {
                let string = xmlHttpRequest.responseText;
                const data = JSON.parse(string);
                let count = data.length;
                let optionHtml = "";
                for (let i = 0; i < count; i++) {
                    obj.appendChild(createSpanElement(data[i].MC,data[i].DM));
                    if (i > 0 && i % 17 == 0) {
                        obj.appendChild(createBrElement());
                    }
                }
            } else if (xmlHttpRequest.status >= 400) {
                alert('the request has failed. please try again later. error info:[' + xmlHttpRequest.responseText + ']');
            }
        }
    }
}


function getNextBh() {
    let requestUrl =  getContextPath()+"#NAMESPACE#/action";
    //请求参数
    let parameters = 'requestMethod=getNextBh';
    let xmlHttpRequest = sendAjaxRequest(requestUrl, parameters);
    xmlHttpRequest.onreadystatechange = () => {
        if (xmlHttpRequest.readyState === 4) {
            if (xmlHttpRequest.status >= 200 && xmlHttpRequest.status < 300) {
                let string = xmlHttpRequest.responseText;
                const data = JSON.parse(string);
                let count = data.length;
                if(count>0){
                    return data[0].bh;
                    //设置编号

                }else{
                    return '-1';
                }

            } else if (xmlHttpRequest.status >= 400) {
                alert('the request has failed. please try again later. error info:[' + xmlHttpRequest.responseText + ']');
            }
        }
    }
}