package #PACKAGE#;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.IOException;
import java.util.*;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;

@WebServlet(name = "#NAMESPACE#/active", value = "#NAMESPACE#/active")
public class Active extends HttpServlet {
  @Override
  protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    request.setCharacterEncoding("utf-8");
    response.setContentType("application/json; charset=utf-8");
    String returnData = "";
    String method = request.getParameter("requestMethod");
    if (method.indexOf("query") != -1) {
      returnData = query(request, response);
    } else if (method.indexOf("insert") != -1) {
      returnData = insert(request, response);
    } else if (method.indexOf("update") != -1) {
      returnData = update(request, response);
    } else if (method.indexOf("delete") != -1) {
      returnData = delete(request, response);
    }
    response.getWriter().write(returnData);
  }

  @Override
  protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    doGet(request, response);
  }

  public String query(HttpServletRequest request) {
         return commonQuery(request);
  }

  public String insert(HttpServletRequest request) {
         return commonInsert(request);
  }

  public String update(HttpServletRequest request) {
        return commonUpdate(request);
  }

  public void delete(HttpServletRequest request) {
        return commonUpdate(request);
  }

  private static java.sql.Connection connection = null;
  private static String driver="#DRIVER#";
  private static String user="#USER#";
  private static String pwd="#PWD#";
  private static String url="#URL#";
  public static java.sql.Connection buildConnect() throws ClassNotFoundException, SQLException {
      if (connection != null && !connection.isClosed()) {
        return connection;
      }
      Class.forName(driver);
      connection = java.sql.DriverManager.getConnection(url, user, pwd);
      return connection;
    }
  /**
  * query rows
  * @Author: goshawker@yeah.net
  * @Description:
  * @Date: 2022/10/26 20:57
  * @Version: 1.0
  */
  public static String commonQuery(HttpServletRequest request){
    String JSONString = new String();
    #QUERYCODE#

    return JSONString;
  }
    /**
    * update a row
    * @Author: goshawker@yeah.net
    * @Description:
    * @Date: 2022/10/26 20:59
    * @Version: 1.0
    */
    public static String commonUpdate(HttpServletRequest request){
      int affected_rows = 0;
      #UPDATECODE#

      return String.valueOf(affected_rows);
    }

    /**
    * delete a row
    * @Author: goshawker@yeah.net
    * @Description:
    * @Date: 2022/10/26 21:25
    * @Version: 1.0
    */
    public static String commonDelete(HttpServletRequest request){
      int affected_rows = 0;
      #DELETECODE#

      return String.valueOf(affected_rows);
    }

    /**
    * insert a row
    * @Author: goshawker@yeah.net
    * @Description:
    * @Date: 2022/10/26 20:59
    * @Version: 1.0
    */
    public static String commonInsert(HttpServletRequest request){
      int affected_rows = 0;
      #INSERTCODE#

      return String.valueOf(affected_rows);
    }
    public static JSONArray toJSONArray(ResultSet rs) throws SQLException, JSONException {
        JSONArray array = new JSONArray();
        ResultSetMetaData metaData = rs.getMetaData();
        int columnCount = metaData.getColumnCount();
        while (rs.next()) {
            JSONObject jsonObj = new JSONObject();
            for (int i = 1; i <= columnCount; i++) {
                String columnName = metaData.getColumnLabel(i);
                String value = rs.getString(columnName);
                jsonObj.put(columnName, value);
            }
            array.add(jsonObj);
        }
        return array;
    }
}
